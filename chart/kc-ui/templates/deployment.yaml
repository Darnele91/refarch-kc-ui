apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "kc-ui.fullname" . }}
  labels:
    app: {{ template "kc-ui.name" . }}
    chart: {{ template "kc-ui.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "kc-ui.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "kc-ui.name" . }}
        release: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{ .Values.image.pullSecret }}
      {{- end }}
      containers:
      - name: "{{  .Chart.Name  }}"
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: {{ .Values.service.servicePort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds}}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds}}
        ports:
        - containerPort: {{ .Values.service.servicePort}}
        resources:
          requests:
            cpu: "{{ .Values.image.resources.requests.cpu }}"
            memory: "{{ .Values.image.resources.requests.memory }}"
        env:
          - name: KAFKA_BROKERS
            valueFrom:
              configMapKeyRef:
                name: "{{ .Values.eventstreams.brokersConfigMap }}"
                key: brokers
          - name: PORT
            value : "{{ .Values.service.servicePort }}"
          - name: APPLICATION_NAME
            value: "{{ .Release.Name }}"
          - name: FLEETMS_SERVICE_HOST
            value: "fleetms-service"
          - name: FLEETMS_SERVICE_PORT
            value: "9080"
          - name: ORDERCOMMANDMS_SERVICE_HOST
            value: "ordercommandms-service"
          - name: ORDERCOMMANDMS_SERVICE_PORT
            value: "9080"
          - name: ORDERQUERYMS_SERVICE_HOST
            value: "orderqueryms-service"
          - name: ORDERQUERYMS_SERVICE_PORT
            value: "9080"
          - name: VOYAGESMS_SERVICE_HOST
            value: "voyagesms-service"
          - name: VOYAGESMS_SERVICE_PORT
            value: "3000"
          {{- if or (eq .Values.eventstreams.env "IBMCLOUD") (eq .Values.eventstreams.env "ICP")}}
          - name: KAFKA_APIKEY
            valueFrom:
              secretKeyRef:
                name: "{{ .Values.eventstreams.apikeyConfigMap }}"
                key: binding
          {{- end}}
          {{- if .Values.eventstreams.securityEnabled }}
          - name: KAFKA_CERT_PATH
            value : "{{ .Values.eventstreams.caPemFilePath }}/{{ .Values.eventstreams.caPemFileName }}"
          {{- end }}
        {{- if .Values.eventstreams.securityEnabled }}
        volumeMounts:
          - mountPath: "{{ .Values.eventstreams.caPemFilePath }}"
            name: eventstreams-pem-certificate
            readOnly: true
        {{- end }}
      {{- if .Values.eventstreams.securityEnabled }}
      volumes:
        - name: eventstreams-pem-certificate
          secret:
            secretName: "{{ .Values.eventstreams.caPemSecretName }}"
      {{- end }}
